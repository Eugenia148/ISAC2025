import streamlit as stimport matplotlib.pyplot as pltimport numpy as npdef render_tactical_profile_panel(profile: dict):    """    Renderiza un radar táctico con el mismo formato que el usado para delanteros,    pero adaptable también a defensas o cualquier perfil PCA.    """    # 1️⃣ Detectar variables y valores    if "ability_scores" in profile and profile["ability_scores"]:        data = profile["ability_scores"]        labels = list(data.keys())        values = list(data.values())    elif "PC1" in profile:  # compatibilidad con defensas        labels = [f"PC{i}" for i in range(1,7) if f"PC{i}" in profile]        values = [profile[label] for label in labels]    else:        st.warning("No ability data available to display radar.")        return    # 2️⃣ Normalizar    max_val = max(values) if max(values) > 1 else 1    values_norm = [v / max_val for v in values]    values_norm += values_norm[:1]    angles = np.linspace(0, 2 * np.pi, len(labels), endpoint=False).tolist()    angles += angles[:1]    # 3️⃣ Crear figura estilo delantero    fig, ax = plt.subplots(figsize=(6,6), subplot_kw=dict(polar=True))    ax.plot(angles, values_norm, linewidth=2, color="#FFB400")  # dorado Club América    ax.fill(angles, values_norm, color="#FFB400", alpha=0.25)    ax.set_xticks(angles[:-1])    ax.set_xticklabels(labels, fontsize=10, fontweight="bold", color="white")    ax.set_yticklabels([])    ax.set_ylim(0, 1)    ax.set_facecolor("#0E1117")  # fondo oscuro    fig.patch.set_facecolor("#0E1117")    ax.spines["polar"].set_color("#FFFFFF")    ax.grid(color="gray", linestyle="dotted")    # 4️⃣ Título dinámico    title = profile.get("player_name", "Player") + " – " + profile.get("team_name", "")    ax.set_title(title, fontsize=14, color="white", pad=20)    st.pyplot(fig)    # 5️⃣ Stats o texto adicional    stats = profile.get("stats", {})    if stats:        col1, col2, col3 = st.columns(3)        with col1:            st.metric("Minutes", stats.get("minutes", "—"))        with col2:            st.metric("Goals", stats.get("goals", "—"))        with col3:            st.metric("Assists", stats.get("assists", "—"))